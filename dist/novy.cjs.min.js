"use strict";function e(){let e=0;return()=>e++}Object.defineProperty(exports,"__esModule",{value:!0});let t=(e,t)=>{return(null==(s=e)?String(s):s.constructor.name)===t;var s};class s{#e=e();constructor(){this.#e=e(),this.$events={}}$heard(e){return Reflect.has(this.$events,e)}$on(e,t){Reflect.has(t,"#uuid")&&(t.$uuid=this.#e());let s=e.split("."),l=this.$events;for(let e of s)Reflect.has(l,e)||(l[e]={$cb:[]}),l=l[e];return l.$cb.push(t),this}$$runCallback(e,...t){for(let s in e)if("$cb"===s)for(let s of e.$cb)s(...t);else this.$$runCallback(e[s])}$emit(e,...t){var s=e.split(".");let l=this.$events;for(let e of s)l[e]&&(l=l[e]);return this.$$runCallback(l,...t),this}$off(e,s){var l=e.split(".");let c=this.$events;for(let e of l)c[e]&&(c=c[e]);if(t(s,"Function")){if(Reflect.has(c,"$cb"))for(let e in c.$cb)c.$cb[e].$uuid===s.uuid&&delete c.$cb[e]}else c.$cb=[];return this}}class l extends s{constructor(){super(),this.$lockFunc=null}lock(e){this.$lockFunc=e}unlock(e){this.$lockFunc=null}}exports.NovyEvent=s,exports.NovyVM=function(...e){var t=new l;return Object.assign(t,...e),new Proxy(t,{get:(e,t,s)=>(Reflect.get(e,"$lockFunc")&&e.$on(`change.${t}`,Reflect.get(e,"$lockFunc")),Reflect.get(e,t,s)),set(e){}})};
