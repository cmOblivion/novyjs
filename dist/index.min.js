!function(){"use strict";function t(){let t=0;return()=>t++}let e=(t,e)=>{return(null==(i=t)?String(i):i.constructor.name)===e;var i},i=t=>e(t,"Function");class s{#t=t();constructor(){this.#t=t(),this.$events={}}$heard(t){return Reflect.has(this.$events,t)}$on(t,...e){return Reflect.has(e,"#uuid")&&(e.uuid=this.#t()),this.$heard(t)?this.$events[t]=this.$events[t].c$oncat(e):this.$events[t]=e,"bind"!==t&&this.$emit("bind",t,e),this}$emit(t,...e){if(this.$heard(t))for(let i of this.$look(t))i(...e);let i=`$on${t}`;return Reflect.has(this,i)&&this[i](...e),this}$look(t){return this.$heard(t)?this.$events[t]:[]}$cancel(t,s){if(i(t)&&s.uuid)for(let t in this.$events)for(let e in this.$events[t])this.$events[t][e].uuid===s.uuid&&delete this.$events[t][e];else if(e(t,"String"))if(i(s)&&s.uuid)for(let e in this.$events[t])this.$events[t][e].uuid===s.uuid&&delete this.$events[t][e];else this.$heard(t)&&delete this.$events[t];return this}}(t=>{const e={NovyEvent:s};t.$&&(t.$=e),t.Novy=e})(globalThis)}();
